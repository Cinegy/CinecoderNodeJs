/* Copyright 2017 Cinegy GmbH.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  The version of Cinecoder for these headers should be: 3.30.18.13164
*/

[object, uuid(00001801-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_PES_Info : ICC_Settings
{
	[propget] HRESULT PID                   ([out,retval]CC_PID*);
	[propget] HRESULT StreamType            ([out,retval]CC_ELEMENTARY_STREAM_TYPE*);
	[propget] HRESULT StreamID              ([out,retval]BYTE*);
	[propget] HRESULT BasePTS               ([out,retval]CC_TIME*);
	[propget] HRESULT ScramblingControl     ([out,retval]DWORD*);
	[propget] HRESULT PriorityFlag          ([out,retval]CC_BOOL*);
	[propget] HRESULT OriginalFlag          ([out,retval]CC_BOOL*);
	[propget] HRESULT CrcProtected          ([out,retval]CC_BOOL*);
	[propget] HRESULT AdditionalCopyInfo    ([out,retval]BYTE*);

	[propget] HRESULT Descriptors           ([out,retval]ICC_SystemDescriptorsReader**);

    [propget] HRESULT PacketSize            ([out,retval]INT*);
    [propget] HRESULT PacketHeaderSize      ([out,retval]DWORD*);
};

[object, uuid(00001802-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_ProgramInfo : ICC_Settings
{
	[propget] HRESULT ProgNum               ([out,retval]WORD*);
	[propget] HRESULT PMT_PID               ([out,retval]CC_PID*);
	[propget] HRESULT PCR_PID               ([out,retval]CC_PID*);
	[propget] HRESULT Descriptors           ([out,retval]ICC_SystemDescriptorsReader**);
	[propget] HRESULT NumStreams            ([out,retval]DWORD*);
	          HRESULT GetStream             ([in]DWORD StreamNumber, [out,retval]ICC_PES_Info**);
};  

[object, uuid(00001803-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_MultiplexedStreamInfo : ICC_Settings
{
	[propget] HRESULT StreamType            ([out,retval]CC_MULTIPLEXED_STREAM_TYPE*);
	[propget] HRESULT BitRate               ([out,retval]CC_BITRATE*);

	[propget] HRESULT NumPrograms           ([out,retval]DWORD*);
	          HRESULT GetProgram            ([in] DWORD ProgramIdx, [out,retval]ICC_ProgramInfo**);

	[propget] HRESULT StreamID              ([out,retval]WORD*);
};





[object, uuid(00001A01-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_BaseMultiplexerSettings : ICC_Settings
{
    // Target multiplexed stream type.
	[propget] HRESULT StreamType            ([out,retval]CC_MULTIPLEXED_STREAM_TYPE*t);
	[propput] HRESULT StreamType            ([in]        CC_MULTIPLEXED_STREAM_TYPE t);
	// Target bitrate mode - constant or variable.
	[propget] HRESULT RateMode              ([out,retval]CC_BITRATE_MODE*m);
	[propput] HRESULT RateMode              ([in]        CC_BITRATE_MODE m);
	// Target bitrate of the multiplexed stream. If zero - calculates automatically.
	[propget] HRESULT BitRate               ([out,retval]CC_BITRATE*b);
	[propput] HRESULT BitRate               ([in]        CC_BITRATE b);
	// The trailing stream alignment, specified in bytes. (1000 means 1000-bytes alignment of the stream).
	[propget] HRESULT TrailingAlignment     ([out,retval]CC_UINT*a);
	[propput] HRESULT TrailingAlignment     ([in]        CC_UINT a);
	// Clock reference for the first byte of multiplexed stream, in 90000 Hz units.
	[propget] HRESULT InitialPTS            ([out,retval]CC_TIME*t);
	[propput] HRESULT InitialPTS            ([in]        CC_TIME t);
	// The output policy for multiplexer.
    [propget] HRESULT OutputPolicy          ([out,retval]CC_MUX_OUTPUT_POLICY*p);
    [propput] HRESULT OutputPolicy          ([in]        CC_MUX_OUTPUT_POLICY p);
    //
    [propget] HRESULT MaxOutputBlkSize      ([out,retval]CC_UINT*s);
    [propput] HRESULT MaxOutputBlkSize      ([in]        CC_UINT s);
    //
    [propget] HRESULT AsyncInputMode        ([out,retval]CC_BOOL*b);
    [propput] HRESULT AsyncInputMode        ([in]        CC_BOOL b);
};

[object, uuid(00001A02-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_BaseMultiplexerPinSettings : ICC_Settings
{
	[propget] HRESULT StreamType            ([out,retval]CC_ELEMENTARY_STREAM_TYPE*);
	[propput] HRESULT StreamType            ([in]        CC_ELEMENTARY_STREAM_TYPE);
	[propget] HRESULT StreamID              ([out,retval]BYTE*);
	[propput] HRESULT StreamID              ([in]        BYTE);
	[propget] HRESULT BasePTS               ([out,retval]CC_TIME*);
	[propput] HRESULT BasePTS               ([in]        CC_TIME);
    [propget] HRESULT BitRate               ([out,retval]CC_BITRATE*);
    [propput] HRESULT BitRate               ([in]        CC_BITRATE);
    [propget] HRESULT SampleRate            ([out,retval]CC_SAMPLE_RATE*);
    [propput] HRESULT SampleRate            ([in]        CC_SAMPLE_RATE);
    [propget] HRESULT FrameRate             ([out,retval]CC_FRAME_RATE*);
    [propput] HRESULT FrameRate             ([in]        CC_FRAME_RATE);
	// The period at which the access units will align to the packet's boundary.
	// By default, audio streams aligned only at the beginning, video streams are aligned each I-frame.
	[propget] HRESULT DataAlignPeriod       ([out,retval]CC_PERIOD*);
	[propput] HRESULT DataAlignPeriod       ([in]        CC_PERIOD);
};

[object, uuid(00001B11-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_SystemMuxerPinSettings : ICC_BaseMultiplexerPinSettings
{
    [propget] HRESULT PacketSize            ([out,retval]INT*);
    [propput] HRESULT PacketSize            ([in]        INT);
    [propget] HRESULT PacketHeaderSize      ([out,retval]DWORD*);
    [propput] HRESULT PacketHeaderSize      ([in]        DWORD);
    [propget] HRESULT PacketAlignment       ([out,retval]DWORD*);
    [propput] HRESULT PacketAlignment       ([in]        DWORD);
    [propget] HRESULT PayloadAlignment      ([out,retval]DWORD*);
    [propput] HRESULT PayloadAlignment      ([in]        DWORD);
};

[object, uuid(00001B01-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_SystemMuxerSettings : ICC_Settings
{
	[propget] HRESULT RateMode              ([out,retval]CC_BITRATE_MODE*);
	[propput] HRESULT RateMode              ([in]        CC_BITRATE_MODE);
	[propget] HRESULT BitRate               ([out,retval]CC_BITRATE*);
	[propput] HRESULT BitRate               ([in]        CC_BITRATE);
	[propget] HRESULT TrailingAlignment     ([out,retval]DWORD*);
	[propput] HRESULT TrailingAlignment     ([in]        DWORD);

    [propget] HRESULT PackHeaderPeriod      ([out,retval]CC_PERIOD*);
    [propput] HRESULT PackHeaderPeriod      ([in]        CC_PERIOD);
    [propget] HRESULT SystemHeaderPeriod    ([out,retval]CC_PERIOD*);
    [propput] HRESULT SystemHeaderPeriod    ([in]        CC_PERIOD);
    [propget] HRESULT StandaloneSystemHeader([out,retval]CC_BOOL*);
    [propput] HRESULT StandaloneSystemHeader([in]        CC_BOOL);
    [propget] HRESULT SuppressIsoEndCode    ([out,retval]CC_BOOL*);
    [propput] HRESULT SuppressIsoEndCode    ([in]        CC_BOOL);

    [propget] HRESULT PacketSize            ([out,retval]INT*);
    [propput] HRESULT PacketSize            ([in]        INT);
    [propget] HRESULT PacketHeaderSize      ([out,retval]DWORD*);
    [propput] HRESULT PacketHeaderSize      ([in]        DWORD);
    [propget] HRESULT PacketAlignment       ([out,retval]DWORD*);
    [propput] HRESULT PacketAlignment       ([in]        DWORD);
    [propget] HRESULT PayloadAlignment      ([out,retval]DWORD*);
    [propput] HRESULT PayloadAlignment      ([in]        DWORD);

//##[propget] HRESULT NumStreams            ([out,retval]DWORD*);
//##          HRESULT GetStream             ([in] DWORD StreamNumber, [out,retval]ICC_SystemMuxerPinSettings**);
//##          HRESULT AddStream             ([in] ICC_SystemMuxerPinSettings*);
};






[object, uuid(00001B12-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_ProgramMuxerPinSettings : ICC_BaseMultiplexerPinSettings
{
	[propget] HRESULT ScramblingControl     ([out,retval]DWORD*);
	[propput] HRESULT ScramblingControl     ([in]        DWORD);
	[propget] HRESULT PriorityFlag          ([out,retval]CC_BOOL*);
	[propput] HRESULT PriorityFlag          ([in]        CC_BOOL);
	[propget] HRESULT OriginalFlag          ([out,retval]CC_BOOL*);
	[propput] HRESULT OriginalFlag          ([in]        CC_BOOL);
	[propget] HRESULT CrcProtected          ([out,retval]CC_BOOL*);
	[propput] HRESULT CrcProtected          ([in]        CC_BOOL);
	[propget] HRESULT AdditionalCopyInfo    ([out,retval]BYTE*);
	[propput] HRESULT AdditionalCopyInfo    ([in]        BYTE);

	[propget] HRESULT Descriptors           ([out,retval]ICC_SystemDescriptorsReader**);

    [propget] HRESULT PacketSize            ([out,retval]INT*);
    [propput] HRESULT PacketSize            ([in]        INT);
    [propget] HRESULT PacketHeaderSize      ([out,retval]DWORD*);
    [propput] HRESULT PacketHeaderSize      ([in]        DWORD);
    [propget] HRESULT PacketAlignment       ([out,retval]DWORD*);
    [propput] HRESULT PacketAlignment       ([in]        DWORD);
    [propget] HRESULT PayloadAlignment      ([out,retval]DWORD*);
    [propput] HRESULT PayloadAlignment      ([in]        DWORD);
    [propget] HRESULT HideFromSystemHeader  ([out,retval]CC_BOOL*);
    [propput] HRESULT HideFromSystemHeader  ([in]        CC_BOOL);
};

[object, uuid(00001B02-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_ProgramMultiplexerSettings : ICC_Settings
{
	[propget] HRESULT RateMode              ([out,retval]CC_BITRATE_MODE*);
	[propput] HRESULT RateMode              ([in]        CC_BITRATE_MODE);
	[propget] HRESULT BitRate               ([out,retval]CC_BITRATE*);
	[propput] HRESULT BitRate               ([in]        CC_BITRATE);
	[propget] HRESULT TrailingAlignment     ([out,retval]DWORD*);
	[propput] HRESULT TrailingAlignment     ([in]        DWORD);

    [propget] HRESULT PackHeaderPeriod      ([out,retval]CC_PERIOD*);
    [propput] HRESULT PackHeaderPeriod      ([in]        CC_PERIOD);
    [propget] HRESULT SystemHeaderPeriod    ([out,retval]CC_PERIOD*);
    [propput] HRESULT SystemHeaderPeriod    ([in]        CC_PERIOD);
    [propget] HRESULT StandaloneSystemHeader([out,retval]CC_BOOL*);
    [propput] HRESULT StandaloneSystemHeader([in]        CC_BOOL);
    [propget] HRESULT SuppressIsoEndCode    ([out,retval]CC_BOOL*);
    [propput] HRESULT SuppressIsoEndCode    ([in]        CC_BOOL);
    [propget] HRESULT PutProgramStreamMap   ([out,retval]CC_BOOL*);
    [propput] HRESULT PutProgramStreamMap   ([in]        CC_BOOL);

    [propget] HRESULT PacketSize            ([out,retval]INT*);
    [propput] HRESULT PacketSize            ([in]        INT);
    [propget] HRESULT PacketHeaderSize      ([out,retval]DWORD*);
    [propput] HRESULT PacketHeaderSize      ([in]        DWORD);
    [propget] HRESULT PacketAlignment       ([out,retval]DWORD*);
    [propput] HRESULT PacketAlignment       ([in]        DWORD);
    [propget] HRESULT PayloadAlignment      ([out,retval]DWORD*);
    [propput] HRESULT PayloadAlignment      ([in]        DWORD);
	[propget] HRESULT CrcProtected          ([out,retval]CC_BOOL*);
	[propput] HRESULT CrcProtected          ([in]        CC_BOOL);

	[propget] HRESULT Descriptors           ([out,retval]ICC_SystemDescriptorsManager**pDescr);
	[propget] HRESULT NumStreams            ([out,retval]DWORD*);
	          HRESULT GetStream             ([in] DWORD StreamNumber, [out,retval]ICC_ProgramMuxerPinSettings**);
	          HRESULT AddStream             ([in] ICC_ProgramMuxerPinSettings*);
};


[object, uuid(00001C21-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_TransportMuxerPinSettings : ICC_BaseMultiplexerPinSettings
{
	[propget] HRESULT PID                   ([out,retval]CC_PID*);
	[propput] HRESULT PID                   ([in]        CC_PID);
	// The period at which PES headers will be added to the corresponding access unit.
	// By default at each audio or video access unit.
	[propget] HRESULT PesHeaderPeriod       ([out,retval]CC_PERIOD*);
	[propput] HRESULT PesHeaderPeriod       ([in]        CC_PERIOD);

	[propget] HRESULT ScramblingControl     ([out,retval]DWORD*);
	[propput] HRESULT ScramblingControl     ([in]        DWORD);
	[propget] HRESULT PriorityFlag          ([out,retval]CC_BOOL*);
	[propput] HRESULT PriorityFlag          ([in]        CC_BOOL);
	[propget] HRESULT OriginalFlag          ([out,retval]CC_BOOL*);
	[propput] HRESULT OriginalFlag          ([in]        CC_BOOL);
	[propget] HRESULT CrcProtected          ([out,retval]CC_BOOL*);
	[propput] HRESULT CrcProtected          ([in]        CC_BOOL);
	[propget] HRESULT AdditionalCopyInfo    ([out,retval]BYTE*);
	[propput] HRESULT AdditionalCopyInfo    ([in]        BYTE);

	[propget] HRESULT Descriptors           ([out,retval]ICC_SystemDescriptorsManager**);
};

[object, uuid(00001C01-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_TransportMultiplexerSettings : ICC_Settings
{
	[propget] HRESULT RateMode              ([out,retval]CC_BITRATE_MODE*);
	[propput] HRESULT RateMode              ([in]        CC_BITRATE_MODE);
	[propget] HRESULT BitRate               ([out,retval]CC_BITRATE*);
	[propput] HRESULT BitRate               ([in]        CC_BITRATE);
	[propget] HRESULT TrailingAlignment     ([out,retval]DWORD*);
	[propput] HRESULT TrailingAlignment     ([in]        DWORD);

	[propget] HRESULT StreamID              ([out,retval]WORD*);
	[propput] HRESULT StreamID              ([in]        WORD);
	                                       
	[propget] HRESULT PMT_Period            ([out,retval]CC_PERIOD*);
	[propput] HRESULT PMT_Period            ([in]        CC_PERIOD);
	[propget] HRESULT PCR_Period            ([out,retval]CC_PERIOD*);
	[propput] HRESULT PCR_Period            ([in]        CC_PERIOD);
	[propget] HRESULT PAT_Period            ([out,retval]CC_PERIOD*);
	[propput] HRESULT PAT_Period            ([in]        CC_PERIOD);
	[propget] HRESULT CrcProtected          ([out,retval]CC_BOOL*);
	[propput] HRESULT CrcProtected          ([in]        CC_BOOL);

	[propget] HRESULT ProgNum               ([out,retval]WORD*);
	[propput] HRESULT ProgNum               ([in]        WORD);
	[propget] HRESULT PMT_PID               ([out,retval]CC_PID*);
	[propput] HRESULT PMT_PID               ([in]        CC_PID);
	[propget] HRESULT PCR_PID               ([out,retval]CC_PID*);
	[propput] HRESULT PCR_PID               ([in]        CC_PID);

	[propget] HRESULT Descriptors           ([out,retval]ICC_SystemDescriptorsManager**pDescr);

//##[propget] HRESULT NumStreams            ([out,retval]DWORD*);
//##          HRESULT GetStream             ([in]DWORD StreamNumber, [out,retval]ICC_TransportMuxerPinSettings**);
//##          HRESULT AddStream             ([in]ICC_TransportMuxerPinSettings*);
};

[object, uuid(00001C11-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_TS_ProgramDescr : ICC_Settings
{
	[propget] HRESULT ProgNum               ([out,retval]WORD*);
	[propput] HRESULT ProgNum               ([in]        WORD);

	[propget] HRESULT PMT_PID               ([out,retval]CC_PID*);
	[propput] HRESULT PMT_PID               ([in]        CC_PID);
	[propget] HRESULT PMT_Period            ([out,retval]CC_PERIOD*);
	[propput] HRESULT PMT_Period            ([in]        CC_PERIOD);

	[propget] HRESULT PCR_PID               ([out,retval]CC_PID*);
	[propput] HRESULT PCR_PID               ([in]        CC_PID);
	[propget] HRESULT PCR_Period            ([out,retval]CC_PERIOD*);
	[propput] HRESULT PCR_Period            ([in]        CC_PERIOD);

	[propget] HRESULT InitialPTS            ([out,retval]CC_TIME*);
	[propput] HRESULT InitialPTS            ([in]        CC_TIME);
	[propget] HRESULT DiscontinuityThreshold([out,retval]CC_TIME*);
	[propput] HRESULT DiscontinuityThreshold([in]        CC_TIME);

	[propget] HRESULT Descriptors           ([out,retval]ICC_SystemDescriptorsManager**pDescr);
//##[propget] HRESULT NumStreams            ([out,retval]DWORD*);
//##          HRESULT GetStream             ([in]DWORD StreamNumber, [out,retval]ICC_TransportMuxerPinSettings**);
//##          HRESULT AddStream             ([in] ICC_TransportMuxerPinSettings*);

	[propget] HRESULT CrcProtected          ([out,retval]CC_BOOL*);
	[propput] HRESULT CrcProtected          ([in]        CC_BOOL);
};

[object, uuid(00001C02-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_M2TSMP_MultiplexerSettings : ICC_Settings
{
	[propget] HRESULT RateMode              ([out,retval]CC_BITRATE_MODE*);
	[propput] HRESULT RateMode              ([in]        CC_BITRATE_MODE);
	[propget] HRESULT BitRate               ([out,retval]CC_BITRATE*);
	[propput] HRESULT BitRate               ([in]        CC_BITRATE);
	[propget] HRESULT TrailingAlignment     ([out,retval]DWORD*);
	[propput] HRESULT TrailingAlignment     ([in]        DWORD);

	[propget] HRESULT NumPrograms           ([out,retval]DWORD*);
	          HRESULT GetProgram            ([in] DWORD ProgramIdx, [out,retval]ICC_TS_ProgramDescr**);
	          HRESULT AddProgram            ([in] ICC_TS_ProgramDescr*);
	                                       
	[propget] HRESULT StreamID              ([out,retval]WORD*);
	[propput] HRESULT StreamID              ([in]        WORD);
	[propget] HRESULT ProgNumBase           ([out,retval]WORD*);
	[propput] HRESULT ProgNumBase           ([in]        WORD);
	                                       
	[propget] HRESULT PMT_Period            ([out,retval]CC_PERIOD*);
	[propput] HRESULT PMT_Period            ([in]        CC_PERIOD);
	[propget] HRESULT PCR_Period            ([out,retval]CC_PERIOD*);
	[propput] HRESULT PCR_Period            ([in]        CC_PERIOD);
	[propget] HRESULT PAT_Period            ([out,retval]CC_PERIOD*);
	[propput] HRESULT PAT_Period            ([in]        CC_PERIOD);
	[propget] HRESULT CrcProtected          ([out,retval]CC_BOOL*);
	[propput] HRESULT CrcProtected          ([in]        CC_BOOL);
};

[object, uuid(00001D01-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_HDV1MuxerSettings : ICC_Settings
{
	[propget] HRESULT StreamID              ([out,retval]WORD*);
	[propput] HRESULT StreamID              ([in]        WORD);
	                                       
	[propget] HRESULT ProgNum               ([out,retval]WORD*);
	[propput] HRESULT ProgNum               ([in]        WORD);
};

[object, uuid(00001D02-be08-11dc-aa88-005056c00008), pointer_default(unique), local]
interface ICC_HDV2MuxerSettings : ICC_Settings
{
	[propget] HRESULT StreamID              ([out,retval]WORD*);
	[propput] HRESULT StreamID              ([in]        WORD);
	                                       
	[propget] HRESULT ProgNum               ([out,retval]WORD*);
	[propput] HRESULT ProgNum               ([in]        WORD);
};

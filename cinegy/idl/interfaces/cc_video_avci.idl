/* Copyright 2017 Cinegy GmbH.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  The version of Cinecoder for these headers should be: 3.30.18.13164
*/

typedef [v1_enum] enum CC_AVCI_MODE
{
  CC_AVCI_MODE_UNKNOWN   = 0x00,

  CC_AVCI_50_720P_2398   = 0x100,
  CC_AVCI_50_720P_25     = 0x101,
  CC_AVCI_50_720P_2997   = 0x102,
  CC_AVCI_50_720P_50     = 0x09,
  CC_AVCI_50_720P_5994   = 0x08,

  CC_AVCI_50_1080P_2398  = 0x104,
  CC_AVCI_50_1080P_25    = 0x04,
  CC_AVCI_50_1080P_2997  = 0x03,
  CC_AVCI_50_1080I_50    = 0x02,
  CC_AVCI_50_1080I_5994  = 0x01,

  CC_AVCI_100_720P_2398  = 0x105,
  CC_AVCI_100_720P_25    = 0x106,
  CC_AVCI_100_720P_2997  = 0x107,
  CC_AVCI_100_720P_50    = 0x29,
  CC_AVCI_100_720P_5994  = 0x28,

  CC_AVCI_100_1080P_2398 = 0x108,
  CC_AVCI_100_1080P_25   = 0x24,
  CC_AVCI_100_1080P_2997 = 0x23,
  CC_AVCI_100_1080I_50   = 0x22,
  CC_AVCI_100_1080I_5994 = 0x21,

  CC_AVCI_4K_422_2398    = 0x400,
  CC_AVCI_4K_422_25      = 0x401,
  CC_AVCI_4K_422_2997    = 0x402,
  CC_AVCI_4K_422_50      = 0x403,
  CC_AVCI_4K_422_5994    = 0x404,
} 
CC_AVCI_MODE;

[object, uuid(54761d8c-4180-46c7-8364-144a64ed1e8e), pointer_default(unique), local]
// The Settings for AVC-Intra Encoder initialization.
interface ICC_AVCIntraEncoderSettings : ICC_Settings
{
  // The AVC Intra encoder mode.
  [propget] HRESULT  Mode                     ([out,retval] CC_AVCI_MODE *x);
  [propput] HRESULT  Mode                     ([in]         CC_AVCI_MODE  x);

  // Number of single encoders to be used.
  [propget] HRESULT  NumSingleEncoders        ([out,retval] CC_UINT      *x);
  [propput] HRESULT  NumSingleEncoders        ([in]         CC_UINT       x);

  // The Frequency of SPS/PPS generation, in frames. See CC_PERIOD_FLAGS for details.
  // CC_ONCE(0) = only at the beginnig, FRQ_FOREVER(1) = at each frame.
  // You can also specify the period in milliseconds by adding the FRQ_TIMEVAL_MS flag to the value.
  // The default value is CC_ONCE.
  [propget] HRESULT  SequenceHeaderPeriod     ([out,retval] CC_PERIOD    *x);
  [propput] HRESULT  SequenceHeaderPeriod     ([in]         CC_PERIOD     x);

  // Sequence display extension - color coefficients.
  [propget] HRESULT  ColorCoefs               ([out,retval] CC_COLOUR_DESCRIPTION*x); 
  [propput] HRESULT  ColorCoefs               ([in]         CC_COLOUR_DESCRIPTION x); 
};

[object, uuid(0242b581-180a-430e-bb9c-1a78e60de3e5), pointer_default(unique), local]
// Interface for AVC Intra video encoder
interface ICC_AVCIntraEncoder : ICC_H264VideoEncoder
{
  // Specifies the initial timecode for the first frame.
  // Note: Should be used before first call to AddFrame.
  [propput] HRESULT  InitialTimeCode          ([in]         CC_TIMECODE   x);
};

[object, uuid(6c54b9dd-6608-4b3c-8325-3d45a612cbb9), pointer_default(unique), local]
// Interface for AVC Intra video decoder
interface ICC_AVCIntraDecoder : ICC_H264VideoDecoder
{
};

[object, uuid(1a5e58f3-876d-4efa-aa2b-8d68d5f9da4e), pointer_default(unique), local]
// Interface for AVCIntraVideoDecoder2 object
interface ICC_AVCIntraDecoder2 : ICC_H264VideoDecoder
{
  // The number of "single" decoders running in parallel
  [propget] HRESULT   ConcurrencyLevel([out,retval] CC_AMOUNT *p);
  [propput] HRESULT   ConcurrencyLevel([in]         CC_AMOUNT  v);
};


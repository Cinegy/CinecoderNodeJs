[object, uuid(d6baaecc-900a-4fce-bb7a-5feb665be275), pointer_default(unique), local]
// The settings for CinecoderD10VideoEncoder initialization.
interface ICC_D10VideoEncoderSettings : ICC_Settings
{
  // The frame size. You can specify 720x576, 720x608 for PAL and 720x480, 720x512 for NTSC. In the first cases 32 blank lines will be added automatically.                               
  [propget] HRESULT  FrameSize                ([out,retval] CC_SIZE*x); 
  [propput] HRESULT  FrameSize                ([in]         CC_SIZE x); 
  // The IMX video format (CC_VIDEO_FORMAT_PAL or CC_VIDEO_FORMAT_NTSC). If no FrameSize is specified, 720x608 or 720x512 are assumed.
  [propget] HRESULT  VideoFormat              ([out,retval] CC_VIDEO_FORMAT          *x); 
  [propput] HRESULT  VideoFormat              ([in]         CC_VIDEO_FORMAT           x); 
  // Required. The bitrate of target IMX stream. Possible values are 30000000, 40000000 and 50000000 bits/sec.
  [propget] HRESULT  BitRate                  ([out,retval] CC_BITRATE               *x);
  [propput] HRESULT  BitRate                  ([in]         CC_BITRATE                x);
  // Optional. See CC_ASPECT_RATIO.
  [propget] HRESULT  AspectRatioCode          ([out,retval] CC_MPG_ASPECT_RATIO_CODE *x); 
  [propput] HRESULT  AspectRatioCode          ([in]         CC_MPG_ASPECT_RATIO_CODE  x); 
  // The color transformarion description.
  [propget] HRESULT  ColorCoefs               ([out,retval] CC_COLOUR_DESCRIPTION    *x);
  [propput] HRESULT  ColorCoefs               ([in]         CC_COLOUR_DESCRIPTION     x);
  // Quantization function
  [propget] HRESULT  QuantFunc                ([out,retval] CC_MPG_QUANT_FUNC*x);
  [propput] HRESULT  QuantFunc                ([in]         CC_MPG_QUANT_FUNC x);

  // The number of MPEG_USER_DATA, associated with the stream.
  [propget] HRESULT  UserDataCount            ([out,retval] DWORD*x);

  // Adds another user data to the Sequence Layer of a MPEG video stream.
  // Returns: Returns S_OK if successful or an error value otherwise.
  HRESULT   AddUserData(
    [in,size_is(cbSize)] const BYTE *pbUserData,// The user data.
    [in] DWORD cbSize                           // The user data size.
  );  

  // Retrieves the specified user data associated with the stream (seq_hdr level).
  // Returns: Returns S_OK if successful or E_INVALIDARG in case of incorrect dwUserDataNumber.
  HRESULT   GetUserData(
    [in] DWORD dwUserDataNumber,               // Specified the user data number, zero-based.
    [out, size_is(cbBufSize)] BYTE *pData,     // Place to store the user data, if NULL the only size of the specified user data will be returned.
    [in] DWORD cbBufSize,                      // Buffer size.
    [out,retval] DWORD *pcbRetSize             // Place to store the user data size.
  );  
};

[object, uuid(aa7effd7-7830-4400-b51e-ac7b3510f9c1), pointer_default(unique), local]
// Interface for D10 video encoder is the same as for MpegVideoEncoder.
interface ICC_D10VideoEncoder : ICC_MpegVideoEncoder
{
};
